テクノロジ
共通フレーム２０１３
システム開発のプロセス
企画プロセス　システム化構想の立案（傾斜のニーズ、課題の確認、対象業務の明確化）
　システム化計画の立案（費用の設定、サービス品質）
要件定義プロセス（顧客のニーズの要件（機能要件、非機能要件）抽出、利害関係者の抽出）
システム化範囲（どのようにシステムで実現するのか）決める
企画はこちら側の要件を抽出、要件定義はクライアント側の要件抽出

システム開発プロセス（ソフトウェ合実装プロセス（ソフトウェア要件定義、ソフトウェア方式設計、ソフトウェア詳細設計）＋ハードウェア実装プロセス）
保守プロセス　システムがサービスレベルを常に保って動作できるように、修正、運用テストする
　システム要件定義、システム方式設計、システム結合、適格性確認テストからなる
システム開発のV字モデル（ソフトウェアを作るまで詳細化する）
　システム要件定義
　システム方式設計（決定したシステム要件を満たすため、サブシステムごとにどのハード、ソフトを選定するか決める
　画面などのインターフェースなどを設計する）
　ソフトウェア要件定義
　論理データモデル作成し、ソフトウェアに求められる機能を定める
　ソフトウェア方式設計
　
　ソフトウェア詳細設計
　方式設計の結果を受けて、モジュールレベル分割して細かな内容を決定
　ソフトウェア構築
テストするものは方式設計　サブシステムの攻勢決めるので結合テストする
要件定義　必要な要件満たしているか　適格性があるかテストする
　ソフトウェア結合テスト（ソフトウェア方式設計、ソフトウェア詳細設計などをテストする）
　ソフトウェア適格性テスト（ソフトウェア要件定義のテスト）
　システム結合テスト（システム方式設計の確認）
　システム適格性テスト（システム要件定義を確かめる）
プロセス中心アプローチ（DFD）　必要な機能から必要なデータを導く
データ中心アプローチ　データからプロセス立てる
オブジェクト指向アプローチ　データまとめたオブジェクトで考える

オブジェクト志向の概念　データとメソッドをカプセル化（クラスとしてまとめる）して定義する
クラス　オブジェクトのふるまいをプログラムしたもの
インスタンス　クラスから精製した実態
継承（インヘリタンス）（汎か）上位のクラス（すーぱクラス）を下位のクラス（サブクラス）が受け継ぐこと
ぼんか＝サブクラス、受け継ぐ奴はいっぱいいるので一般化したからぼんかという
上位のクラスには変数名だけ定義して処理の詳細は書かないから、抽象クラス

ポリモーフィズム（多態性。多相性）継承したクラス間で同じメソッド定義し、
実行時にどの処理が実行されるか、つまりどのクラスが実行されるか
